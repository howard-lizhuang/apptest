name: Build Windows Application Package

on:
  push:
    branches: ['master']

jobs:
  build_windows:
    runs-on: windows-latest  # 使用最新的Windows运行环境

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # 检出项目代码

    - name: Set up Python
      uses: actions/setup-python@v4  # 设置Python环境
      with:
        python-version: 3.x  # 根据项目需求指定Python版本，这里假设使用Python 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        #pip install -r requirements.txt   如果项目有依赖文件requirements.txt，安装依赖项

    - name: Build Windows package
      run: |
        # 这里假设项目使用pyinstaller来构建Windows可执行文件，根据实际情况修改打包命令
        pip install pyinstaller
        pyinstaller --onefile main.py  # 将main.py打包成一个独立的可执行文件，可根据项目实际入口文件修改

    - name: Archive artifacts
      uses: actions/upload-artifact@v3  # 将构建好的包上传为GitHub Action的工件
      with:
        name: windows_application_package
        path: dist/  # 假设pyinstaller构建的可执行文件在dist目录下，根据实际情况修改路径
